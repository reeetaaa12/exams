import itertools
import math

def razmn():
    t = int(input('\n(t) –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è, –∑–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã—á–∏—Å–ª–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ä–∞–∑–º–Ω–æ–∂–µ–Ω–∏—è: '))
    n = int(input('(n) –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: '))
    a = int(input("(a) –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏: "))
    while n < a:
        print('–ß—Å–∏–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω–∞ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ø—É–ª—è—Ü–∏–∏ –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏\n')
        n = int(input('(n) –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: '))
        a = int(input('(a) –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏: '))
    b = int(input('(Œ≤) –í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –æ—Å–æ–±–∏ —É 1 –ø–æ—Ç–æ–º–∫–∞ –∑–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª t: '))
    print("\n–í—ã—á–∏—Å–ª—è–µ–º –ø–æ —Ñ–æ—Ä–º—É–ª–µ: P = (n-1)C(a-1)*e^(-nŒ≤t)")
    p = itertools.combinations((n - 1),(a - 1)) * math.exp((-n)*b*t)
    print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ", p)

    i = int(input('–ù–∞–∂–º–∏—Ç–µ 1, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏–ª–∏ 2, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã: '))
    while a < 1 or a > 2:
        i = input("–ù–∞–∂–º–∏—Ç–µ 1, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏–ª–∏ 2, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã: ")
    return i


def razm_gib():
    t = int(input('\n(t) –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è, –∑–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã—á–∏—Å–ª–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ä–∞–∑–º–Ω–æ–∂–µ–Ω–∏—è: '))
    n = int(input('(n) –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: '))
    while n < 1:
        print('\n–ß—Å–∏–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ–ª—å–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω–∞ 1')
        n = int(input('(n) –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: '))
    a = int(input('(a) –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏: '))
    b = int(input('(Œ≤) –í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –æ—Å–æ–±–∏ —É 1 –ø–æ—Ç–æ–º–∫–∞ –∑–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª t: '))
    u = 2 #–Ω–µ –∑–Ω–∞—é —á–µ–º—É —Ä–∞–≤–Ω–æ –ª–∏–±–æ –Ω–∞–¥–æ –ø—Ä–æ—Å–∏—Ç—å –≤–≤–µ—Å—Ç–∏
    g = (u*math.exp((b - u) * t) - 1)/(b * math.exp((b - u) * t)- u)
    h = (b*g)/u
    j = 0
    if n < a:
        w = n
    else:
        w = a
    print("\n–í—ã—á–∏—Å–ª—è–µ–º –ø–æ —Ñ–æ—Ä–º—É–ª–µ: P= ‚àë(j=0)^(min(a,n)) [(j)C(a)*(a+n-j-1)C(a-1)*g^(a-j)*h^(n-j)*(1-g-h)^j]")
    p1 = 0
    for j in range(w):
        p1 = p1 + (itertools.combinations(a,j) * itertools.combinations((a+n-j-1),(a-1)) * pow(g,(a-j)) * pow(h,(n-1)) * pow((1-g-h),j))
    print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ", p1)

    i = int(input('–ù–∞–∂–º–∏—Ç–µ 1, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏–ª–∏ 2, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã: '))
    while i < 1 or i > 2:
        i = input("–ù–∞–∂–º–∏—Ç–µ 1, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏–ª–∏ 2, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã: ")
    return i

def migr():
    t = int(input('\n(t) –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è, –∑–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã—á–∏—Å–ª–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ä–∞–∑–º–Ω–æ–∂–µ–Ω–∏—è: '))
    n = int(input('(n) –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: '))
    a = int(input("(a) –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏: "))
    b = int(input('(Œ≤) –í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –æ—Å–æ–±–∏ —É 1 –ø–æ—Ç–æ–º–∫–∞ –∑–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª t: '))
    u = 33 # –Ω—É–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –∑–Ω–∞—é –∫–∞–∫–∏–µ
    v = 42
    X = 10
    T = pow(2.7, ((b-u)*t))
    print("\n–í—ã—á–∏—Å–ª—è–µ–º –ø–æ —Ñ–æ—Ä–º—É–ª–µ P = (((Œ≤-Œº)/(Œ≤*T-Œº))^(ŒΩ/Œ≤))*(1-((Œ≤*(T-1))/(Œ≤*T-Œº))*X)^(-ŒΩ/Œ≤)")
    p1 = pow(((b-u)/(b*T-u)), (v/b)) * pow((1-((b*(T-1))/(b*T-u))*X), (-v/b))
    print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ", p1)

    i = int(input('–ù–∞–∂–º–∏—Ç–µ 1, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏–ª–∏ 2, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã: '))
    while a < 1 or a > 2:
        i = input("–ù–∞–∂–º–∏—Ç–µ 1, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏–ª–∏ 2, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã: ")
    return i

def popul():
    #–ù–ï –ù–ê–®–õ–ê –§–û–†–ú–£–õ–£

    i = int(input('–ù–∞–∂–º–∏—Ç–µ 1, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏–ª–∏ 2, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã: '))
    while a < 1 or a > 2:
        i = input("–ù–∞–∂–º–∏—Ç–µ 1, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∏–ª–∏ 2, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã: ")
    return i

def menu():
    print('\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –ö—É–∑–Ω–µ—Ü–æ–≤–æ–π –ï–∫–∞—Ç–µ—Ä–∏–Ω—ã –∏ –ë–∞–±—É—Ö–∞–¥–∏—è –ú–∞—Ä–≥–∞—Ä–∏—Ç—ã üôÇ\n')
    print('–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤—É:\n')
    print('1) –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑–º–Ω–æ–∂–µ–Ω–∏—è\n')
    print('2) –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑–º–Ω–æ–∂–µ–Ω–∏—è –∏ –≥–∏–±–µ–ª–∏\n')
    print('3) –í–ª–∏—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏\n')
    print('4) –ü–æ–ø—É–ª—è—Ü–∏–∏, —Å–æ—Å—Ç–æ—è—â–∏–µ –∏–∑ –æ—Å–æ–±–µ–π 2 –ø–æ–ª–æ–≤\n')

    a = input("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ")
    while a < "1" or a > "4":
        a = input("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ")
    if a == "1":
        o = razmn()
    elif a == "2":
        o = razm_gib()
    elif a == "3":
        o = migr()
    elif a == "4":
        o = popul()
    return o


k = menu()
while k == 1:
    k = menu()
